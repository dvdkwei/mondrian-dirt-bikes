2021-06-13 16:46:06,573 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[CUSTOMER].[#null]
2021-06-13 16:46:06,573 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[CUSTOMER].[#null]
2021-06-13 16:46:06,574 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[PRODUCT].[#null]
2021-06-13 16:46:06,579 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(3586, 0)
2021-06-13 16:46:06,580 DEBUG [mondrian.rolap.FastBatchingCellReader] FastBatchingCellReader: bitkey=0x0000000000000000000000000000000000000000000000000010000000001001
  YEAR (0): EXTRACT(YEAR FROM ORDER_DATE)
  COUNTRY_AS_IS (3): "CUSTOMER_AS_IS"."C_LAND"
  DIVISION (13): "WI2_ACU008_PRODUCT"."P_DIVISION"

2021-06-13 16:46:06,584 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(1727011176).add:
*Segment Header
Schema:[HyperSchema]
Checksum:[911011f5a5d2b2e733399aa52ef4271d]
Cube:[HyperCube@DirtBikes]
Measure:[COSTOFGOODSSOLDUSD]
Axes:[
    {CUSTOMER_AS_IS.C_LAND=(*)}
    {EXTRACT(YEAR FROM ORDER_DATE)=(*)}
    {WI2_ACU008_PRODUCT.P_DIVISION=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[e222108841298b3a3bd2c2e66a99179046c154653ded4d1a758a7d4f8618638e]

2021-06-13 16:46:06,585 DEBUG [mondrian.rolap.BatchLoader$Batch] Batch.load (millis) 1
2021-06-13 16:46:06,585 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 5
2021-06-13 16:46:06,585 DEBUG [mondrian.rolap.agg.AggregationManager] MATCH: WI2_ACU008_FACT_TABLE
   foreign=0x0000000000000000000000000000000000000000000000000010000000001001
   measure=0x0000000000000000000000000000000000000000010000000000000000000000
   aggstar=0x0000000000000000000000000000000000000001111111001010000010111011
AggStar=AGG_2_WI2_ACU008_FACT_TABLE
   [NETSALESUSD] (21): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_NETSALESUSD")
   [DISCOUNTUSD] (20): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_DISCOUNTUSD")
   [SALESQUANTITY] (23): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_SALESQUANTITY")
   [REVENUEEUR] (19): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_REVENUEEUR")
   [REVENUEUSD] (18): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_REVENUEUSD")
   [COSTOFGOODSSOLDUSD] (22): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_COGSUSD")
   [NOOFSALESORDERS] (24): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_NOOFSALESORDERS")
   YEAR (0): "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR"
   CUSTOMER_AS_IS (7): "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID"
   MONTH (1): "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_MONTH"
   DIVISION (13): "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION"
   PRODUCT_CATEGORY (15): "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_CATEGORY"

2021-06-13 16:46:06,586 DEBUG [mondrian.rolap.agg.AggregationManager] generateSqlQuery: sql=select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "CUSTOMER_AS_IS"."C_LAND" as "c1",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c2",
    sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_COGSUSD") as "m0"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "CUSTOMER_AS_IS"."C_LAND",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION"
2021-06-13 16:46:06,586 DEBUG [mondrian.sql] 30: Segment.load: executing sql [
select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "CUSTOMER_AS_IS"."C_LAND" as "c1",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c2",
    sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_COGSUSD") as "m0"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "CUSTOMER_AS_IS"."C_LAND",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION"]
2021-06-13 16:46:06,587 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(30)
2021-06-13 16:46:06,633 DEBUG [mondrian.sql] 30: , exec 46 ms
2021-06-13 16:46:06,633 DEBUG [mondrian.rolap.RolapUtil] Segment.load: executing sql [select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "CUSTOMER_AS_IS"."C_LAND" as "c1",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c2",
    sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_COGSUSD") as "m0"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "CUSTOMER_AS_IS"."C_LAND",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION"], exec 46 ms
2021-06-13 16:46:06,633 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(30)
2021-06-13 16:46:06,744 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@3c69721
2021-06-13 16:46:06,744 DEBUG [mondrian.sql] 30: , exec+fetch 157 ms, 40 rows
2021-06-13 16:46:06,744 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@28947aa4
2021-06-13 16:46:06,744 DEBUG [mondrian.rolap.RolapUtil] Segment.load: done executing sql [select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "CUSTOMER_AS_IS"."C_LAND" as "c1",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c2",
    sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_COGSUSD") as "m0"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "CUSTOMER_AS_IS"."C_LAND",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION"], exec+fetch 157 ms, 40 rows, ex=31, close=31, open=[]
2021-06-13 16:46:06,744 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=30, sql=select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "CUSTOMER_AS_IS"."C_LAND" as "c1",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c2",
    sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_COGSUSD") as "m0"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "CUSTOMER_AS_IS"."C_LAND",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION"}
2021-06-13 16:46:06,745 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(30)
2021-06-13 16:46:06,747 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-Segment.load invoked 1 times for total of 157ms.  (Avg. 157ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[TIME].[YEAR], [PRODUCT].[DIVISION], [CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS]] invoked 1 times for total of 143ms.  (Avg. 143ms/invocation)

2021-06-13 16:46:06,747 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 326074kb 82.81%
2021-06-13 16:46:06,748 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=HyperSchema, star=WI2_ACU008_FACT_TABLE
2021-06-13 16:46:06,748 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=3586, phaseCount=2, cellCacheRequestCount=480, cellCacheHitCount=440, cellCacheMissCount=40, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2021-06-13 16:46:06,748 DEBUG [mondrian.mdx] 3586: exec: 330 ms
2021-06-13 16:46:06,748 DEBUG [mondrian.server.monitor] ExecutionEndEvent(3586)
2021-06-13 16:46:06,749 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=3, statements=1, connections=10
2021-06-13 16:46:06,749 DEBUG [mondrian.server.monitor] StatementInfo{statementId=111, executeStartCount=1, executeEndCount=1, phaseCount=2, cellCacheRequestCount=480, cellCacheHitCount=440, cellCacheMissCount=40, cellCachePendingCount=0, sqlStatementStartCount=2, sqlStatementExecuteCount=2, sqlStatementEndCount=2, sqlStatementRowFetchCount=80, sqlStatementExecuteNanos=84830800, cellRequestCount=40}
2021-06-13 16:46:06,749 DEBUG [mondrian.server.monitor] StatementEndEvent(111)
2021-06-13 16:46:06,760 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=3, statements=0, connections=10
2021-06-13 16:46:06,760 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=3, statements=0, connections=11
2021-06-13 16:46:06,760 DEBUG [mondrian.server.monitor] ConnectionStartEvent(104)
2021-06-13 16:46:06,760 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/mondrian-schema.xml" using dynamic processor
2021-06-13 16:46:06,760 DEBUG [mondrian.server.monitor] StatementStartEvent(116)
2021-06-13 16:46:06,761 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=3, statements=1, connections=11
2021-06-13 16:46:06,761 DEBUG [mondrian.server.monitor] StatementInfo{statementId=116, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2021-06-13 16:46:06,761 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=3, statements=0, connections=11
2021-06-13 16:46:06,761 DEBUG [mondrian.server.monitor] StatementEndEvent(116)
2021-06-13 16:46:06,761 DEBUG [mondrian.server.monitor] ConnectionStartEvent(104)
2021-06-13 16:46:06,761 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2021-06-13 16:46:06,761 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2021-06-13 16:46:06,761 DEBUG [mondrian.server.monitor] ConnectionStartEvent(105)
2021-06-13 16:46:06,762 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/mondrian-schema.xml" using dynamic processor
2021-06-13 16:46:06,762 DEBUG [mondrian.server.monitor] StatementStartEvent(117)
2021-06-13 16:46:06,762 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2021-06-13 16:46:06,762 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2021-06-13 16:46:06,762 DEBUG [mondrian.server.monitor] StatementInfo{statementId=117, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2021-06-13 16:46:06,762 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2021-06-13 16:46:06,762 DEBUG [mondrian.server.monitor] StatementEndEvent(117)
2021-06-13 16:46:06,762 DEBUG [mondrian.server.monitor] ConnectionStartEvent(105)
2021-06-13 16:46:06,763 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2021-06-13 16:46:06,763 DEBUG [mondrian.server.monitor] ConnectionEndEvent(105)
2021-06-13 16:46:07,716 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=3, statements=0, connections=11
2021-06-13 16:46:07,716 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=3, statements=0, connections=12
2021-06-13 16:46:07,716 DEBUG [mondrian.server.monitor] ConnectionStartEvent(106)
2021-06-13 16:46:07,716 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/mondrian-schema.xml" using dynamic processor
2021-06-13 16:46:07,717 DEBUG [mondrian.server.monitor] StatementStartEvent(118)
2021-06-13 16:46:07,717 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=3, statements=1, connections=12
2021-06-13 16:46:07,717 DEBUG [mondrian.server.monitor] StatementInfo{statementId=118, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2021-06-13 16:46:07,717 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=3, statements=0, connections=12
2021-06-13 16:46:07,717 DEBUG [mondrian.server.monitor] StatementEndEvent(118)
2021-06-13 16:46:07,717 DEBUG [mondrian.server.monitor] ConnectionStartEvent(106)
2021-06-13 16:46:07,718 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2021-06-13 16:46:07,718 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2021-06-13 16:46:07,718 DEBUG [mondrian.server.monitor] ConnectionStartEvent(107)
2021-06-13 16:46:07,718 DEBUG [mondrian.server.monitor] StatementStartEvent(119)
2021-06-13 16:46:07,718 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/mondrian-schema.xml" using dynamic processor
2021-06-13 16:46:07,718 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2021-06-13 16:46:07,718 DEBUG [mondrian.server.monitor] StatementInfo{statementId=119, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2021-06-13 16:46:07,718 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2021-06-13 16:46:07,718 DEBUG [mondrian.server.monitor] StatementEndEvent(119)
2021-06-13 16:46:07,719 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2021-06-13 16:46:07,719 DEBUG [mondrian.server.monitor] ConnectionStartEvent(107)
2021-06-13 16:46:07,719 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2021-06-13 16:46:07,719 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=3, statements=0, connections=12
2021-06-13 16:46:07,719 DEBUG [mondrian.server.monitor] ConnectionEndEvent(107)
2021-06-13 16:46:07,719 DEBUG [mondrian.server.monitor] StatementStartEvent(120)
2021-06-13 16:46:07,719 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=3, statements=1, connections=12
2021-06-13 16:46:07,719 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=3, statements=1, connections=13
2021-06-13 16:46:07,719 DEBUG [mondrian.server.monitor] ConnectionStartEvent(108)
2021-06-13 16:46:07,719 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/mondrian-schema.xml" using dynamic processor
2021-06-13 16:46:07,719 DEBUG [mondrian.server.monitor] StatementStartEvent(121)
2021-06-13 16:46:07,720 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=3, statements=2, connections=13
2021-06-13 16:46:07,720 DEBUG [mondrian.server.monitor] StatementInfo{statementId=121, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2021-06-13 16:46:07,720 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=3, statements=1, connections=13
2021-06-13 16:46:07,721 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2021-06-13 16:46:07,720 DEBUG [mondrian.server.monitor] StatementEndEvent(121)
2021-06-13 16:46:07,721 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2021-06-13 16:46:07,721 DEBUG [mondrian.server.monitor] ConnectionStartEvent(108)
2021-06-13 16:46:07,721 DEBUG [mondrian.server.monitor] ConnectionStartEvent(109)
2021-06-13 16:46:07,721 DEBUG [mondrian.server.monitor] StatementStartEvent(122)
2021-06-13 16:46:07,721 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/mondrian-schema.xml" using dynamic processor
2021-06-13 16:46:07,721 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2021-06-13 16:46:07,722 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2021-06-13 16:46:07,722 DEBUG [mondrian.server.monitor] StatementInfo{statementId=122, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2021-06-13 16:46:07,722 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2021-06-13 16:46:07,722 DEBUG [mondrian.server.monitor] StatementEndEvent(122)
2021-06-13 16:46:07,722 DEBUG [mondrian.server.monitor] ConnectionStartEvent(109)
2021-06-13 16:46:07,722 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2021-06-13 16:46:07,722 DEBUG [mondrian.server.monitor] ConnectionEndEvent(109)
2021-06-13 16:46:07,725 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=3, statements=1, connections=13
2021-06-13 16:46:07,725 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=3, statements=1, connections=14
2021-06-13 16:46:07,725 DEBUG [mondrian.server.monitor] ConnectionStartEvent(110)
2021-06-13 16:46:07,725 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/mondrian-schema.xml" using dynamic processor
2021-06-13 16:46:07,725 DEBUG [mondrian.server.monitor] StatementStartEvent(123)
2021-06-13 16:46:07,726 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=3, statements=2, connections=14
2021-06-13 16:46:07,726 DEBUG [mondrian.server.monitor] StatementInfo{statementId=123, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2021-06-13 16:46:07,726 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=3, statements=1, connections=14
2021-06-13 16:46:07,726 DEBUG [mondrian.server.monitor] StatementEndEvent(123)
2021-06-13 16:46:07,727 DEBUG [mondrian.server.monitor] ConnectionStartEvent(110)
2021-06-13 16:46:07,727 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2021-06-13 16:46:07,727 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2021-06-13 16:46:07,727 DEBUG [mondrian.server.monitor] ConnectionStartEvent(111)
2021-06-13 16:46:07,727 DEBUG [mondrian.server.monitor] StatementStartEvent(124)
2021-06-13 16:46:07,727 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/mondrian-schema.xml" using dynamic processor
2021-06-13 16:46:07,728 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2021-06-13 16:46:07,728 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2021-06-13 16:46:07,728 DEBUG [mondrian.server.monitor] StatementInfo{statementId=124, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2021-06-13 16:46:07,728 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2021-06-13 16:46:07,728 DEBUG [mondrian.server.monitor] StatementEndEvent(124)
2021-06-13 16:46:07,728 DEBUG [mondrian.server.monitor] ConnectionStartEvent(111)
2021-06-13 16:46:07,728 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2021-06-13 16:46:07,728 DEBUG [mondrian.server.monitor] ConnectionEndEvent(111)
2021-06-13 16:46:07,728 DEBUG [mondrian.rolap.RolapConnection] 
WITH
SET [~ROWS_TIME_TIME] AS
    {[TIME].[YEAR].Members}
SET [~ROWS_PRODUCT_PRODUCT] AS
    {[PRODUCT].[DIVISION].Members}
SET [~ROWS_CUSTOMER_CUSTOMER.CUSTOMER_AS_IS_REPORTING] AS
    {[CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS].Members}
SELECT
NON EMPTY {[Measures].[SALESQUANTITY], [Measures].[REVENUEEUR], [Measures].[REVENUEUSD], [Measures].[DISCOUNTUSD], [Measures].[NETSALESUSD], [Measures].[COSTOFGOODSSOLDUSD], [Measures].[NOOFSALESORDERS]} ON COLUMNS,
NON EMPTY NonEmptyCrossJoin([~ROWS_TIME_TIME], NonEmptyCrossJoin([~ROWS_PRODUCT_PRODUCT], [~ROWS_CUSTOMER_CUSTOMER.CUSTOMER_AS_IS_REPORTING])) ON ROWS
FROM [HyperCube@DirtBikes]
2021-06-13 16:46:07,729 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[CUSTOMER.CUSTOMER_AS_IS_REPORTING]
2021-06-13 16:46:07,729 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[CUSTOMER.CUSTOMER_AS_IS_REPORTING], status=hierUsage == null returning elementname=CUSTOMER.CUSTOMER_AS_IS_REPORTING
2021-06-13 16:46:07,729 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=CUSTOMER.CUSTOMER_AS_IS_REPORTING, child.class=mondrian.rolap.RolapCubeHierarchy
2021-06-13 16:46:07,730 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[PRODUCT]
2021-06-13 16:46:07,730 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[PRODUCT], status=hierUsage == not shared returning elementname=PRODUCT
2021-06-13 16:46:07,730 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=PRODUCT, child.class=mondrian.rolap.RolapCubeDimension
2021-06-13 16:46:07,730 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[TIME]
2021-06-13 16:46:07,730 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[TIME], status=hierUsage == not shared returning elementname=TIME
2021-06-13 16:46:07,730 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=TIME, child.class=mondrian.rolap.RolapCubeDimension
2021-06-13 16:46:07,731 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[TIME].[YEAR]
2021-06-13 16:46:07,731 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[TIME], status=hierUsage == not shared returning elementname=TIME
2021-06-13 16:46:07,731 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=TIME, childname=[YEAR] returning elementname=YEAR
2021-06-13 16:46:07,731 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=YEAR, child.class=mondrian.rolap.RolapCubeLevel
2021-06-13 16:46:07,731 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[PRODUCT].[DIVISION]
2021-06-13 16:46:07,731 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[PRODUCT], status=hierUsage == not shared returning elementname=PRODUCT
2021-06-13 16:46:07,731 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=PRODUCT, childname=[DIVISION] returning elementname=DIVISION
2021-06-13 16:46:07,731 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DIVISION, child.class=mondrian.rolap.RolapCubeLevel
2021-06-13 16:46:07,732 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS]
2021-06-13 16:46:07,732 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[CUSTOMER.CUSTOMER_AS_IS_REPORTING], status=hierUsage == null returning elementname=CUSTOMER.CUSTOMER_AS_IS_REPORTING
2021-06-13 16:46:07,732 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=CUSTOMER.CUSTOMER_AS_IS_REPORTING, childname=[COUNTRY_AS_IS] returning elementname=COUNTRY_AS_IS
2021-06-13 16:46:07,732 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=COUNTRY_AS_IS, child.class=mondrian.rolap.RolapCubeLevel
2021-06-13 16:46:07,732 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[Measures].[SALESQUANTITY]
2021-06-13 16:46:07,732 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[Measures] returning elementname=Measures
2021-06-13 16:46:07,732 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[SALESQUANTITY] returning elementname=SALESQUANTITY
2021-06-13 16:46:07,732 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=SALESQUANTITY, child.class=mondrian.rolap.RolapBaseCubeMeasure
2021-06-13 16:46:07,733 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[Measures].[REVENUEEUR]
2021-06-13 16:46:07,733 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[Measures] returning elementname=Measures
2021-06-13 16:46:07,733 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[REVENUEEUR] returning elementname=REVENUEEUR
2021-06-13 16:46:07,733 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=REVENUEEUR, child.class=mondrian.rolap.RolapBaseCubeMeasure
2021-06-13 16:46:07,733 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[Measures].[REVENUEUSD]
2021-06-13 16:46:07,733 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[Measures] returning elementname=Measures
2021-06-13 16:46:07,733 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[REVENUEUSD] returning elementname=REVENUEUSD
2021-06-13 16:46:07,733 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=REVENUEUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2021-06-13 16:46:07,733 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[Measures].[DISCOUNTUSD]
2021-06-13 16:46:07,733 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[Measures] returning elementname=Measures
2021-06-13 16:46:07,734 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[DISCOUNTUSD] returning elementname=DISCOUNTUSD
2021-06-13 16:46:07,734 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=DISCOUNTUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2021-06-13 16:46:07,734 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[Measures].[NETSALESUSD]
2021-06-13 16:46:07,734 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[Measures] returning elementname=Measures
2021-06-13 16:46:07,734 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NETSALESUSD] returning elementname=NETSALESUSD
2021-06-13 16:46:07,734 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NETSALESUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2021-06-13 16:46:07,734 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[Measures].[COSTOFGOODSSOLDUSD]
2021-06-13 16:46:07,734 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[Measures] returning elementname=Measures
2021-06-13 16:46:07,734 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[COSTOFGOODSSOLDUSD] returning elementname=COSTOFGOODSSOLDUSD
2021-06-13 16:46:07,734 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=COSTOFGOODSSOLDUSD, child.class=mondrian.rolap.RolapBaseCubeMeasure
2021-06-13 16:46:07,735 DEBUG [mondrian.olap.Util] Util.lookupCompound: parent.name=HyperCube@DirtBikes, category=unknown, names=[Measures].[NOOFSALESORDERS]
2021-06-13 16:46:07,735 DEBUG [mondrian.rolap.RolapCube] RolapCube.lookupChild: name=HyperCube@DirtBikes, childname=[Measures] returning elementname=Measures
2021-06-13 16:46:07,735 DEBUG [mondrian.rolap.RolapHierarchy] HierarchyBase.lookupChild: name=Measures, childname=[NOOFSALESORDERS] returning elementname=NOOFSALESORDERS
2021-06-13 16:46:07,735 DEBUG [mondrian.olap.Util] Util.lookupCompound: found child.name=NOOFSALESORDERS, child.class=mondrian.rolap.RolapBaseCubeMeasure
2021-06-13 16:46:07,735 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2021-06-13 16:46:07,735 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[TIME].[#null]
2021-06-13 16:46:07,735 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[CUSTOMER].[#null]
2021-06-13 16:46:07,736 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[CUSTOMER].[#null]
2021-06-13 16:46:07,736 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[PRODUCT].[#null]
2021-06-13 16:46:07,738 DEBUG [mondrian.rolap.RolapConnection] with set [~ROWS_TIME_TIME] as '{[TIME].[YEAR].Members}'
  set [~ROWS_PRODUCT_PRODUCT] as '{[PRODUCT].[DIVISION].Members}'
  set [~ROWS_CUSTOMER_CUSTOMER.CUSTOMER_AS_IS_REPORTING] as '{[CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS].Members}'
select NON EMPTY {[Measures].[SALESQUANTITY], [Measures].[REVENUEEUR], [Measures].[REVENUEUSD], [Measures].[DISCOUNTUSD], [Measures].[NETSALESUSD], [Measures].[COSTOFGOODSSOLDUSD], [Measures].[NOOFSALESORDERS]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_TIME_TIME], NonEmptyCrossJoin([~ROWS_PRODUCT_PRODUCT], [~ROWS_CUSTOMER_CUSTOMER.CUSTOMER_AS_IS_REPORTING])) ON ROWS
from [HyperCube@DirtBikes]

2021-06-13 16:46:07,739 DEBUG [mondrian.mdx] 4079: with set [~ROWS_TIME_TIME] as '{[TIME].[YEAR].Members}'
  set [~ROWS_PRODUCT_PRODUCT] as '{[PRODUCT].[DIVISION].Members}'
  set [~ROWS_CUSTOMER_CUSTOMER.CUSTOMER_AS_IS_REPORTING] as '{[CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS].Members}'
select NON EMPTY {[Measures].[SALESQUANTITY], [Measures].[REVENUEEUR], [Measures].[REVENUEUSD], [Measures].[DISCOUNTUSD], [Measures].[NETSALESUSD], [Measures].[COSTOFGOODSSOLDUSD], [Measures].[NOOFSALESORDERS]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin([~ROWS_TIME_TIME], NonEmptyCrossJoin([~ROWS_PRODUCT_PRODUCT], [~ROWS_CUSTOMER_CUSTOMER.CUSTOMER_AS_IS_REPORTING])) ON ROWS
from [HyperCube@DirtBikes]

2021-06-13 16:46:07,739 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=HyperSchema, star=WI2_ACU008_FACT_TABLE
2021-06-13 16:46:07,739 DEBUG [mondrian.server.monitor] ExecutionStartEvent(4079)
2021-06-13 16:46:07,739 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2021-06-13 16:46:07,739 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[TIME].[#null]
2021-06-13 16:46:07,739 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[CUSTOMER].[#null]
2021-06-13 16:46:07,740 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[CUSTOMER].[#null]
2021-06-13 16:46:07,740 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[PRODUCT].[#null]
2021-06-13 16:46:07,740 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2021-06-13 16:46:07,741 DEBUG [mondrian.sql] 31: SqlTupleReader.readTuples [[TIME].[YEAR], [PRODUCT].[DIVISION], [CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS]]: executing sql [
select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c1",
    "CUSTOMER_AS_IS"."C_LAND" as "c2"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION",
    "CUSTOMER_AS_IS"."C_LAND"
order by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" ASC NULLS LAST,
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" ASC NULLS LAST,
    "CUSTOMER_AS_IS"."C_LAND" ASC NULLS LAST]
2021-06-13 16:46:07,741 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(31)
2021-06-13 16:46:07,789 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(31)
2021-06-13 16:46:07,789 DEBUG [mondrian.sql] 31: , exec 47 ms
2021-06-13 16:46:07,789 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[TIME].[YEAR], [PRODUCT].[DIVISION], [CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS]]: executing sql [select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c1",
    "CUSTOMER_AS_IS"."C_LAND" as "c2"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION",
    "CUSTOMER_AS_IS"."C_LAND"
order by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" ASC NULLS LAST,
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" ASC NULLS LAST,
    "CUSTOMER_AS_IS"."C_LAND" ASC NULLS LAST], exec 47 ms
2021-06-13 16:46:07,894 DEBUG [mondrian.sql] 31: , exec+fetch 153 ms, 40 rows
2021-06-13 16:46:07,894 DEBUG [mondrian.rolap.RolapUtil] SqlTupleReader.readTuples [[TIME].[YEAR], [PRODUCT].[DIVISION], [CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS]]: done executing sql [select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c1",
    "CUSTOMER_AS_IS"."C_LAND" as "c2"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION",
    "CUSTOMER_AS_IS"."C_LAND"
order by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" ASC NULLS LAST,
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" ASC NULLS LAST,
    "CUSTOMER_AS_IS"."C_LAND" ASC NULLS LAST], exec+fetch 153 ms, 40 rows, ex=32, close=32, open=[]
2021-06-13 16:46:07,895 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=31, sql=select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c1",
    "CUSTOMER_AS_IS"."C_LAND" as "c2"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION",
    "CUSTOMER_AS_IS"."C_LAND"
order by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" ASC NULLS LAST,
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" ASC NULLS LAST,
    "CUSTOMER_AS_IS"."C_LAND" ASC NULLS LAST}
2021-06-13 16:46:07,895 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(31)
2021-06-13 16:46:07,896 DEBUG [mondrian.profile] Axis (COLUMNS):
SetListCalc(name=SetListCalc, class=class mondrian.olap.fun.SetFunDef$SetListCalc, type=SetType<MemberType<member=[Measures].[SALESQUANTITY]>>, resultStyle=MUTABLE_LIST, callCount=2, callMillis=0, elementCount=14, elementSquaredCount=98)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[SALESQUANTITY]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[SALESQUANTITY]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[SALESQUANTITY], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[REVENUEEUR]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[REVENUEEUR]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[REVENUEEUR], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[REVENUEUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[REVENUEUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[REVENUEUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[DISCOUNTUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[DISCOUNTUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[DISCOUNTUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NETSALESUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NETSALESUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NETSALESUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[COSTOFGOODSSOLDUSD]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[COSTOFGOODSSOLDUSD]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[COSTOFGOODSSOLDUSD], callCount=2, callMillis=0)
    2(name=2, class=class mondrian.olap.fun.SetFunDef$SetListCalc$2, type=MemberType<member=[Measures].[NOOFSALESORDERS]>, resultStyle=VALUE)
        Literal(name=Literal, class=class mondrian.calc.impl.ConstantCalc, type=MemberType<member=[Measures].[NOOFSALESORDERS]>, resultStyle=VALUE_NOT_NULL, value=[Measures].[NOOFSALESORDERS], callCount=2, callMillis=0)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[TIME].[YEAR], [PRODUCT].[DIVISION], [CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS]] invoked 1 times for total of 153ms.  (Avg. 153ms/invocation)

2021-06-13 16:46:07,896 DEBUG [mondrian.rolap.RolapNativeSet] using native crossjoin
2021-06-13 16:46:07,897 DEBUG [mondrian.profile] Axis (ROWS):
NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[TIME].[YEAR]>, MemberType<level=[PRODUCT].[DIVISION]>, MemberType<level=[CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS]>>>, resultStyle=LIST, callCount=2, callMillis=155, elementCount=80, elementSquaredCount=3200)
    IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[TIME].[YEAR]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        ~ROWS_TIME_TIME(name=~ROWS_TIME_TIME, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[TIME].[YEAR]>>, resultStyle=ITERABLE)
    NonEmptyCrossJoin(name=NonEmptyCrossJoin, class=class mondrian.olap.fun.NonEmptyCrossJoinFunDef$1, type=SetType<TupleType<MemberType<level=[PRODUCT].[DIVISION]>, MemberType<level=[CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS]>>>, resultStyle=LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[PRODUCT].[DIVISION]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_PRODUCT_PRODUCT(name=~ROWS_PRODUCT_PRODUCT, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[PRODUCT].[DIVISION]>>, resultStyle=ITERABLE)
        IterableListCalc(name=IterableListCalc, class=class mondrian.calc.impl.IterableListCalc, type=SetType<MemberType<level=[CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS]>>, resultStyle=MUTABLE_LIST, callCount=0, callMillis=0, elementCount=0, elementSquaredCount=0)
            ~ROWS_CUSTOMER_CUSTOMER.CUSTOMER_AS_IS_REPORTING(name=~ROWS_CUSTOMER_CUSTOMER.CUSTOMER_AS_IS_REPORTING, class=class mondrian.mdx.NamedSetExpr$1, type=SetType<MemberType<level=[CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS]>>, resultStyle=ITERABLE)

Query Timing (Cumulative):
SqlStatement-SqlTupleReader.readTuples [[TIME].[YEAR], [PRODUCT].[DIVISION], [CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS]] invoked 1 times for total of 153ms.  (Avg. 153ms/invocation)

2021-06-13 16:46:07,898 DEBUG [mondrian.rolap.RolapCube] RolapCube.getUsages: name=Measures
2021-06-13 16:46:07,898 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[TIME].[#null]
2021-06-13 16:46:07,898 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[CUSTOMER].[#null]
2021-06-13 16:46:07,898 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[CUSTOMER].[#null]
2021-06-13 16:46:07,898 DEBUG [mondrian.rolap.RolapMember] RolapMember.makeUniqueName: uniqueName=[PRODUCT].[#null]
2021-06-13 16:46:07,904 DEBUG [mondrian.server.monitor] ExecutionPhaseEvent(4079, 0)
2021-06-13 16:46:07,906 DEBUG [mondrian.rolap.FastBatchingCellReader] FastBatchingCellReader: bitkey=0x0000000000000000000000000000000000000000000000000010000000001001
  YEAR (0): EXTRACT(YEAR FROM ORDER_DATE)
  COUNTRY_AS_IS (3): "CUSTOMER_AS_IS"."C_LAND"
  DIVISION (13): "WI2_ACU008_PRODUCT"."P_DIVISION"

2021-06-13 16:46:07,907 DEBUG [mondrian.rolap.cache.SegmentCacheIndexImpl] SegmentCacheIndexImpl(1727011176).add:
*Segment Header
Schema:[HyperSchema]
Checksum:[911011f5a5d2b2e733399aa52ef4271d]
Cube:[HyperCube@DirtBikes]
Measure:[NOOFSALESORDERS]
Axes:[
    {CUSTOMER_AS_IS.C_LAND=(*)}
    {EXTRACT(YEAR FROM ORDER_DATE)=(*)}
    {WI2_ACU008_PRODUCT.P_DIVISION=(*)}]
Excluded Regions:[]
Compound Predicates:[]
ID:[158708a3c0f292650c35b7406b4560355c460139b0e2e0f691e26e45d4599d8f]

2021-06-13 16:46:07,908 DEBUG [mondrian.rolap.BatchLoader$Batch] Batch.load (millis) 1
2021-06-13 16:46:07,908 DEBUG [mondrian.rolap.FastBatchingCellReader] load (millis): 3
2021-06-13 16:46:07,909 DEBUG [mondrian.rolap.agg.AggregationManager] MATCH: WI2_ACU008_FACT_TABLE
   foreign=0x0000000000000000000000000000000000000000000000000010000000001001
   measure=0x0000000000000000000000000000000000000001000000000000000000000000
   aggstar=0x0000000000000000000000000000000000000001111111001010000010111011
AggStar=AGG_2_WI2_ACU008_FACT_TABLE
   [NETSALESUSD] (21): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_NETSALESUSD")
   [DISCOUNTUSD] (20): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_DISCOUNTUSD")
   [SALESQUANTITY] (23): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_SALESQUANTITY")
   [REVENUEEUR] (19): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_REVENUEEUR")
   [REVENUEUSD] (18): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_REVENUEUSD")
   [COSTOFGOODSSOLDUSD] (22): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_COGSUSD")
   [NOOFSALESORDERS] (24): sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_NOOFSALESORDERS")
   YEAR (0): "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR"
   CUSTOMER_AS_IS (7): "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID"
   MONTH (1): "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_MONTH"
   DIVISION (13): "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION"
   PRODUCT_CATEGORY (15): "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_CATEGORY"

2021-06-13 16:46:07,909 DEBUG [mondrian.rolap.agg.AggregationManager] generateSqlQuery: sql=select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "CUSTOMER_AS_IS"."C_LAND" as "c1",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c2",
    sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_NOOFSALESORDERS") as "m0"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "CUSTOMER_AS_IS"."C_LAND",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION"
2021-06-13 16:46:07,910 DEBUG [mondrian.sql] 32: Segment.load: executing sql [
select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "CUSTOMER_AS_IS"."C_LAND" as "c1",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c2",
    sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_NOOFSALESORDERS") as "m0"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "CUSTOMER_AS_IS"."C_LAND",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION"]
2021-06-13 16:46:07,911 DEBUG [mondrian.server.monitor] SqlStatementStartEvent(32)
2021-06-13 16:46:07,959 DEBUG [mondrian.server.monitor] SqlStatementExecuteEvent(32)
2021-06-13 16:46:07,959 DEBUG [mondrian.sql] 32: , exec 48 ms
2021-06-13 16:46:07,959 DEBUG [mondrian.rolap.RolapUtil] Segment.load: executing sql [select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "CUSTOMER_AS_IS"."C_LAND" as "c1",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c2",
    sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_NOOFSALESORDERS") as "m0"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "CUSTOMER_AS_IS"."C_LAND",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION"], exec 48 ms
2021-06-13 16:46:08,076 DEBUG [mondrian.sql] 32: , exec+fetch 165 ms, 40 rows
2021-06-13 16:46:08,076 DEBUG [mondrian.server.monitor] mondrian.rolap.agg.SegmentCacheManager$SegmentLoadSucceededEvent@26158521
2021-06-13 16:46:08,076 DEBUG [mondrian.server.monitor] mondrian.server.monitor.CellCacheSegmentCreateEvent@3db83b62
2021-06-13 16:46:08,076 DEBUG [mondrian.rolap.RolapUtil] Segment.load: done executing sql [select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "CUSTOMER_AS_IS"."C_LAND" as "c1",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c2",
    sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_NOOFSALESORDERS") as "m0"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "CUSTOMER_AS_IS"."C_LAND",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION"], exec+fetch 165 ms, 40 rows, ex=33, close=33, open=[]
2021-06-13 16:46:08,077 DEBUG [mondrian.server.monitor] SqlStatementInfo{sqlStatementId=32, sql=select
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR" as "c0",
    "CUSTOMER_AS_IS"."C_LAND" as "c1",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION" as "c2",
    sum("AGG_2_WI2_ACU008_FACT_TABLE"."SUM_NOOFSALESORDERS") as "m0"
from
    "AGG_2_WI2_ACU008_FACT_TABLE" "AGG_2_WI2_ACU008_FACT_TABLE",
    (SELECT C_DESC, C_CITY, C_SALESORG, C_LAND, TECH_C_ID FROM ACU008.WI2_ACU008_CUSTOMER WHERE CURRENT_DATE BETWEEN VALIDFROM AND VALIDTO ORDER BY C_DESC) "CUSTOMER_AS_IS"
where
    "AGG_2_WI2_ACU008_FACT_TABLE"."CUSTOMER_C_ID" = "CUSTOMER_AS_IS"."TECH_C_ID"
group by
    "AGG_2_WI2_ACU008_FACT_TABLE"."TIME_YEAR",
    "CUSTOMER_AS_IS"."C_LAND",
    "AGG_2_WI2_ACU008_FACT_TABLE"."PRODUCT_P_DIVISION"}
2021-06-13 16:46:08,077 DEBUG [mondrian.server.monitor] SqlStatementEndEvent(32)
2021-06-13 16:46:08,080 DEBUG [mondrian.profile] QueryBody:

Query Timing (Cumulative):
SqlStatement-Segment.load invoked 1 times for total of 165ms.  (Avg. 165ms/invocation)
SqlStatement-SqlTupleReader.readTuples [[TIME].[YEAR], [PRODUCT].[DIVISION], [CUSTOMER.CUSTOMER_AS_IS_REPORTING].[COUNTRY_AS_IS]] invoked 1 times for total of 153ms.  (Avg. 153ms/invocation)

2021-06-13 16:46:08,080 DEBUG [mondrian.olap.ResultBase] RolapResult<init>: FREE_MEMORY: 311566kb 79.13%
2021-06-13 16:46:08,080 DEBUG [mondrian.rolap.RolapStar] RolapStar.clearCachedAggregations: schema=HyperSchema, star=WI2_ACU008_FACT_TABLE
2021-06-13 16:46:08,081 DEBUG [mondrian.mdx] 4079: exec: 342 ms
2021-06-13 16:46:08,081 DEBUG [mondrian.server.monitor] ExecutionInfo{executionId=4079, phaseCount=2, cellCacheRequestCount=560, cellCacheHitCount=520, cellCacheMissCount=40, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0, expCacheHitCount=0, expCacheMissCount=0}
2021-06-13 16:46:08,081 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=3, statements=1, connections=14
2021-06-13 16:46:08,081 DEBUG [mondrian.server.monitor] ExecutionEndEvent(4079)
2021-06-13 16:46:08,081 DEBUG [mondrian.server.monitor] StatementInfo{statementId=120, executeStartCount=1, executeEndCount=1, phaseCount=2, cellCacheRequestCount=560, cellCacheHitCount=520, cellCacheMissCount=40, cellCachePendingCount=0, sqlStatementStartCount=2, sqlStatementExecuteCount=2, sqlStatementEndCount=2, sqlStatementRowFetchCount=80, sqlStatementExecuteNanos=95856600, cellRequestCount=40}
2021-06-13 16:46:08,081 DEBUG [mondrian.server.monitor] StatementEndEvent(120)
2021-06-13 16:46:08,087 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=3, statements=0, connections=14
2021-06-13 16:46:08,087 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=3, statements=0, connections=15
2021-06-13 16:46:08,087 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/mondrian-schema.xml" using dynamic processor
2021-06-13 16:46:08,088 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=3, statements=1, connections=15
2021-06-13 16:46:08,088 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=3, statements=0, connections=15
2021-06-13 16:46:08,088 DEBUG [mondrian.server.monitor] ConnectionStartEvent(112)
2021-06-13 16:46:08,088 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=0
2021-06-13 16:46:08,089 DEBUG [mondrian.server.monitor] StatementStartEvent(125)
2021-06-13 16:46:08,089 DEBUG [mondrian.server.monitor] StatementInfo{statementId=125, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2021-06-13 16:46:08,089 DEBUG [mondrian.server.MondrianServerImpl] addStatement , id=1, statements=0, connections=1
2021-06-13 16:46:08,089 DEBUG [mondrian.server.monitor] StatementEndEvent(125)
2021-06-13 16:46:08,089 DEBUG [mondrian.server.monitor] ConnectionStartEvent(112)
2021-06-13 16:46:08,089 DEBUG [mondrian.rolap.RolapSchema] Pool.get: create schema "file:/mondrian-schema.xml" using dynamic processor
2021-06-13 16:46:08,089 DEBUG [mondrian.server.monitor] ConnectionStartEvent(113)
2021-06-13 16:46:08,089 DEBUG [mondrian.server.monitor] StatementStartEvent(126)
2021-06-13 16:46:08,090 DEBUG [mondrian.server.MondrianServerImpl] removeStatement , id=1, statements=1, connections=1
2021-06-13 16:46:08,090 DEBUG [mondrian.server.monitor] StatementInfo{statementId=126, executeStartCount=0, executeEndCount=0, phaseCount=0, cellCacheRequestCount=0, cellCacheHitCount=0, cellCacheMissCount=0, cellCachePendingCount=0, sqlStatementStartCount=0, sqlStatementExecuteCount=0, sqlStatementEndCount=0, sqlStatementRowFetchCount=0, sqlStatementExecuteNanos=0, cellRequestCount=0}
2021-06-13 16:46:08,090 DEBUG [mondrian.server.MondrianServerImpl] addConnection , id=1, statements=0, connections=1
2021-06-13 16:46:08,090 DEBUG [mondrian.server.monitor] StatementEndEvent(126)
2021-06-13 16:46:08,090 DEBUG [mondrian.server.monitor] ConnectionStartEvent(113)
2021-06-13 16:46:08,090 DEBUG [mondrian.server.MondrianServerImpl] removeConnection , id=1, statements=0, connections=1
2021-06-13 16:46:08,091 DEBUG [mondrian.server.monitor] ConnectionInfo{cellCacheHitCount=0, cellCacheRequestCount=0, cellCacheMissCount=0, cellCachePendingCount=0, statementStartCount=0, statementEndCount=0, executeStartCount=0, executeEndCount=0}
2021-06-13 16:46:08,091 DEBUG [mondrian.server.monitor] ConnectionEndEvent(113)
